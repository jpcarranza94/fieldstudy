weightedpercdata <- dataframe
percent <- wpct(weightedpercdata$sobob, weightedpercdata$sweightcorrected)
listpercent <- as.list(percent)
names(listpercent) <- c("pn", "pnn")
return(listpercent$pnn)
}
wtdpercclust <- function(dataframe){
c1 <- subset(dataframe, cluster == 1, select=c(sobob,sweightcorrected))
c2 <- subset(dataframe, cluster == 2, select=c(sobob,sweightcorrected))
c3 <- subset(dataframe, cluster == 3, select=c(sobob,sweightcorrected))
c4 <- subset(dataframe, cluster == 4, select=c(sobob,sweightcorrected))
c5 <- subset(dataframe, cluster == 5, select=c(sobob,sweightcorrected))
c6 <- subset(dataframe, cluster == 6, select=c(sobob,sweightcorrected))
c7 <- subset(dataframe, cluster == 7, select=c(sobob,sweightcorrected))
c8 <- subset(dataframe, cluster == 8, select=c(sobob,sweightcorrected))
clusterlist <- list(c1,c2,c3,c4,c5,c6,c7,c8)
weightedpercclus<-sapply(clusterlist,weightedperc)
return(weightedpercclus)
}
intconfprop <- function(dataframe){
p<-wtdpercclust(dataframe)
q<-(1-p)
nh <-dataframe %>%
group_by(cluster)%>%
summarise(sumcluster= n_distinct(upm))
n <- sum(nh$sumcluster)
nhn<-merge(nh,n, all.x = TRUE)
nhv <-as.vector(nhn$sumcluster)
nv <- as.vector(nhn$y)
w <-(nhv/nv)^2
var <- sum(w*((p*q)/(nhv)))
SEp <-sqrt(var)
MEp <- 1.96*SEp
pst <- mean(p)
MaxIntervalp <-pst + MEp
MinIntervalp <- pst - MEp
tib <- tibble(pst,var,SEp, MinIntervalp, MaxIntervalp)
return(tib)
}
intconfprop(trabajocampo)
trabajocampo <-trabajocampo %>%
mutate( sobob = ifelse(estnutri == "Obesidad", 1, 0))
trabajocampo$estnutri <- as.factor(trabajocampo$estnutri)
trabajocampo$estnutri <- factor( x = trabajocampo$estnutri, levels = estnutrilab)
#Variance and confidence interval calculator function for proportions
weightedperc <- function(dataframe){
weightedpercdata <- dataframe
percent <- wpct(weightedpercdata$sobob, weightedpercdata$sweightcorrected)
listpercent <- as.list(percent)
names(listpercent) <- c("pn", "pnn")
return(listpercent$pnn)
}
wtdpercclust <- function(dataframe){
c1 <- subset(dataframe, cluster == 1, select=c(sobob,sweightcorrected))
c2 <- subset(dataframe, cluster == 2, select=c(sobob,sweightcorrected))
c3 <- subset(dataframe, cluster == 3, select=c(sobob,sweightcorrected))
c4 <- subset(dataframe, cluster == 4, select=c(sobob,sweightcorrected))
c5 <- subset(dataframe, cluster == 5, select=c(sobob,sweightcorrected))
c6 <- subset(dataframe, cluster == 6, select=c(sobob,sweightcorrected))
c7 <- subset(dataframe, cluster == 7, select=c(sobob,sweightcorrected))
c8 <- subset(dataframe, cluster == 8, select=c(sobob,sweightcorrected))
clusterlist <- list(c1,c2,c3,c4,c5,c6,c7,c8)
weightedpercclus<-sapply(clusterlist,weightedperc)
return(weightedpercclus)
}
intconfprop <- function(dataframe){
p<-wtdpercclust(dataframe)
q<-(1-p)
nh <-dataframe %>%
group_by(cluster)%>%
summarise(sumcluster= n_distinct(upm))
n <- sum(nh$sumcluster)
nhn<-merge(nh,n, all.x = TRUE)
nhv <-as.vector(nhn$sumcluster)
nv <- as.vector(nhn$y)
w <-(nhv/nv)^2
var <- sum(w*((p*q)/(nhv)))
SEp <-sqrt(var)
MEp <- 1.96*SEp
pst <- mean(p)
MaxIntervalp <-pst + MEp
MinIntervalp <- pst - MEp
tib <- tibble(pst,var,SEp, MinIntervalp, MaxIntervalp)
return(tib)
}
intconfprop(trabajocampo)
trabajocampo <-trabajocampo %>%
mutate( sobob = ifelse(estnutri == "Sobrepeso", 1, 0))
trabajocampo$estnutri <- as.factor(trabajocampo$estnutri)
trabajocampo$estnutri <- factor( x = trabajocampo$estnutri, levels = estnutrilab)
#Variance and confidence interval calculator function for proportions
weightedperc <- function(dataframe){
weightedpercdata <- dataframe
percent <- wpct(weightedpercdata$sobob, weightedpercdata$sweightcorrected)
listpercent <- as.list(percent)
names(listpercent) <- c("pn", "pnn")
return(listpercent$pnn)
}
wtdpercclust <- function(dataframe){
c1 <- subset(dataframe, cluster == 1, select=c(sobob,sweightcorrected))
c2 <- subset(dataframe, cluster == 2, select=c(sobob,sweightcorrected))
c3 <- subset(dataframe, cluster == 3, select=c(sobob,sweightcorrected))
c4 <- subset(dataframe, cluster == 4, select=c(sobob,sweightcorrected))
c5 <- subset(dataframe, cluster == 5, select=c(sobob,sweightcorrected))
c6 <- subset(dataframe, cluster == 6, select=c(sobob,sweightcorrected))
c7 <- subset(dataframe, cluster == 7, select=c(sobob,sweightcorrected))
c8 <- subset(dataframe, cluster == 8, select=c(sobob,sweightcorrected))
clusterlist <- list(c1,c2,c3,c4,c5,c6,c7,c8)
weightedpercclus<-sapply(clusterlist,weightedperc)
return(weightedpercclus)
}
intconfprop <- function(dataframe){
p<-wtdpercclust(dataframe)
q<-(1-p)
nh <-dataframe %>%
group_by(cluster)%>%
summarise(sumcluster= n_distinct(upm))
n <- sum(nh$sumcluster)
nhn<-merge(nh,n, all.x = TRUE)
nhv <-as.vector(nhn$sumcluster)
nv <- as.vector(nhn$y)
w <-(nhv/nv)^2
var <- sum(w*((p*q)/(nhv)))
SEp <-sqrt(var)
MEp <- 1.96*SEp
pst <- mean(p)
MaxIntervalp <-pst + MEp
MinIntervalp <- pst - MEp
tib <- tibble(pst,var,SEp, MinIntervalp, MaxIntervalp)
return(tib)
}
intconfprop(trabajocampo)
trabajocampo <-trabajocampo %>%
mutate( sobob = ifelse(estnutri == "Obesidad"| estnutri == "Sobrepeso", 1, 0))
trabajocampo$estnutri <- as.factor(trabajocampo$estnutri)
trabajocampo$estnutri <- factor( x = trabajocampo$estnutri, levels = estnutrilab)
#Variance and confidence interval calculator function for proportions
weightedperc <- function(dataframe){
weightedpercdata <- dataframe
percent <- wpct(weightedpercdata$sobob, weightedpercdata$sweightcorrected)
listpercent <- as.list(percent)
names(listpercent) <- c("pn", "pnn")
return(listpercent$pnn)
}
wtdpercclust <- function(dataframe){
c1 <- subset(dataframe, cluster == 1, select=c(sobob,sweightcorrected))
c2 <- subset(dataframe, cluster == 2, select=c(sobob,sweightcorrected))
c3 <- subset(dataframe, cluster == 3, select=c(sobob,sweightcorrected))
c4 <- subset(dataframe, cluster == 4, select=c(sobob,sweightcorrected))
c5 <- subset(dataframe, cluster == 5, select=c(sobob,sweightcorrected))
c6 <- subset(dataframe, cluster == 6, select=c(sobob,sweightcorrected))
c7 <- subset(dataframe, cluster == 7, select=c(sobob,sweightcorrected))
c8 <- subset(dataframe, cluster == 8, select=c(sobob,sweightcorrected))
clusterlist <- list(c1,c2,c3,c4,c5,c6,c7,c8)
weightedpercclus<-sapply(clusterlist,weightedperc)
return(weightedpercclus)
}
intconfprop <- function(dataframe){
p<-wtdpercclust(dataframe)
q<-(1-p)
nh <-dataframe %>%
group_by(cluster)%>%
summarise(sumcluster= n_distinct(upm))
n <- sum(nh$sumcluster)
nhn<-merge(nh,n, all.x = TRUE)
nhv <-as.vector(nhn$sumcluster)
nv <- as.vector(nhn$y)
w <-(nhv/nv)^2
var <- sum(w*((p*q)/(nhv)))
SEp <-sqrt(var)
MEp <- 1.96*SEp
pst <- mean(p)
MaxIntervalp <-pst + MEp
MinIntervalp <- pst - MEp
tib <- tibble(pst,var,SEp, MinIntervalp, MaxIntervalp)
return(tib)
}
intconfprop(trabajocampo)
trabajocampo <-trabajocampo %>%
mutate( sobob = ifelse(estnutri == "Normal", 1, 0))
trabajocampo$estnutri <- as.factor(trabajocampo$estnutri)
trabajocampo$estnutri <- factor( x = trabajocampo$estnutri, levels = estnutrilab)
#Variance and confidence interval calculator function for proportions
weightedperc <- function(dataframe){
weightedpercdata <- dataframe
percent <- wpct(weightedpercdata$sobob, weightedpercdata$sweightcorrected)
listpercent <- as.list(percent)
names(listpercent) <- c("pn", "pnn")
return(listpercent$pnn)
}
wtdpercclust <- function(dataframe){
c1 <- subset(dataframe, cluster == 1, select=c(sobob,sweightcorrected))
c2 <- subset(dataframe, cluster == 2, select=c(sobob,sweightcorrected))
c3 <- subset(dataframe, cluster == 3, select=c(sobob,sweightcorrected))
c4 <- subset(dataframe, cluster == 4, select=c(sobob,sweightcorrected))
c5 <- subset(dataframe, cluster == 5, select=c(sobob,sweightcorrected))
c6 <- subset(dataframe, cluster == 6, select=c(sobob,sweightcorrected))
c7 <- subset(dataframe, cluster == 7, select=c(sobob,sweightcorrected))
c8 <- subset(dataframe, cluster == 8, select=c(sobob,sweightcorrected))
clusterlist <- list(c1,c2,c3,c4,c5,c6,c7,c8)
weightedpercclus<-sapply(clusterlist,weightedperc)
return(weightedpercclus)
}
intconfprop <- function(dataframe){
p<-wtdpercclust(dataframe)
q<-(1-p)
nh <-dataframe %>%
group_by(cluster)%>%
summarise(sumcluster= n_distinct(upm))
n <- sum(nh$sumcluster)
nhn<-merge(nh,n, all.x = TRUE)
nhv <-as.vector(nhn$sumcluster)
nv <- as.vector(nhn$y)
w <-(nhv/nv)^2
var <- sum(w*((p*q)/(nhv)))
SEp <-sqrt(var)
MEp <- 1.96*SEp
pst <- mean(p)
MaxIntervalp <-pst + MEp
MinIntervalp <- pst - MEp
tib <- tibble(pst,var,SEp, MinIntervalp, MaxIntervalp)
return(tib)
}
intconfprop(trabajocampo)
trabajocampo <-trabajocampo %>%
mutate( sobob = ifelse(estnutri == "Delgadez", 1, 0))
trabajocampo$estnutri <- as.factor(trabajocampo$estnutri)
trabajocampo$estnutri <- factor( x = trabajocampo$estnutri, levels = estnutrilab)
#Variance and confidence interval calculator function for proportions
weightedperc <- function(dataframe){
weightedpercdata <- dataframe
percent <- wpct(weightedpercdata$sobob, weightedpercdata$sweightcorrected)
listpercent <- as.list(percent)
names(listpercent) <- c("pn", "pnn")
return(listpercent$pnn)
}
wtdpercclust <- function(dataframe){
c1 <- subset(dataframe, cluster == 1, select=c(sobob,sweightcorrected))
c2 <- subset(dataframe, cluster == 2, select=c(sobob,sweightcorrected))
c3 <- subset(dataframe, cluster == 3, select=c(sobob,sweightcorrected))
c4 <- subset(dataframe, cluster == 4, select=c(sobob,sweightcorrected))
c5 <- subset(dataframe, cluster == 5, select=c(sobob,sweightcorrected))
c6 <- subset(dataframe, cluster == 6, select=c(sobob,sweightcorrected))
c7 <- subset(dataframe, cluster == 7, select=c(sobob,sweightcorrected))
c8 <- subset(dataframe, cluster == 8, select=c(sobob,sweightcorrected))
clusterlist <- list(c1,c2,c3,c4,c5,c6,c7,c8)
weightedpercclus<-sapply(clusterlist,weightedperc)
return(weightedpercclus)
}
intconfprop <- function(dataframe){
p<-wtdpercclust(dataframe)
q<-(1-p)
nh <-dataframe %>%
group_by(cluster)%>%
summarise(sumcluster= n_distinct(upm))
n <- sum(nh$sumcluster)
nhn<-merge(nh,n, all.x = TRUE)
nhv <-as.vector(nhn$sumcluster)
nv <- as.vector(nhn$y)
w <-(nhv/nv)^2
var <- sum(w*((p*q)/(nhv)))
SEp <-sqrt(var)
MEp <- 1.96*SEp
pst <- mean(p)
MaxIntervalp <-pst + MEp
MinIntervalp <- pst - MEp
tib <- tibble(pst,var,SEp, MinIntervalp, MaxIntervalp)
return(tib)
}
intconfprop(trabajocampo)
trabajocampo <-trabajocampo %>%
mutate( sobob = ifelse(estnutri == "Delgadez extrema", 1, 0))
trabajocampo$estnutri <- as.factor(trabajocampo$estnutri)
trabajocampo$estnutri <- factor( x = trabajocampo$estnutri, levels = estnutrilab)
#Variance and confidence interval calculator function for proportions
weightedperc <- function(dataframe){
weightedpercdata <- dataframe
percent <- wpct(weightedpercdata$sobob, weightedpercdata$sweightcorrected)
listpercent <- as.list(percent)
names(listpercent) <- c("pn", "pnn")
return(listpercent$pnn)
}
wtdpercclust <- function(dataframe){
c1 <- subset(dataframe, cluster == 1, select=c(sobob,sweightcorrected))
c2 <- subset(dataframe, cluster == 2, select=c(sobob,sweightcorrected))
c3 <- subset(dataframe, cluster == 3, select=c(sobob,sweightcorrected))
c4 <- subset(dataframe, cluster == 4, select=c(sobob,sweightcorrected))
c5 <- subset(dataframe, cluster == 5, select=c(sobob,sweightcorrected))
c6 <- subset(dataframe, cluster == 6, select=c(sobob,sweightcorrected))
c7 <- subset(dataframe, cluster == 7, select=c(sobob,sweightcorrected))
c8 <- subset(dataframe, cluster == 8, select=c(sobob,sweightcorrected))
clusterlist <- list(c1,c2,c3,c4,c5,c6,c7,c8)
weightedpercclus<-sapply(clusterlist,weightedperc)
return(weightedpercclus)
}
intconfprop <- function(dataframe){
p<-wtdpercclust(dataframe)
q<-(1-p)
nh <-dataframe %>%
group_by(cluster)%>%
summarise(sumcluster= n_distinct(upm))
n <- sum(nh$sumcluster)
nhn<-merge(nh,n, all.x = TRUE)
nhv <-as.vector(nhn$sumcluster)
nv <- as.vector(nhn$y)
w <-(nhv/nv)^2
var <- sum(w*((p*q)/(nhv)))
SEp <-sqrt(var)
MEp <- 1.96*SEp
pst <- mean(p)
MaxIntervalp <-pst + MEp
MinIntervalp <- pst - MEp
tib <- tibble(pst,var,SEp, MinIntervalp, MaxIntervalp)
return(tib)
}
intconfprop(trabajocampo)
View(trabajocampo)
trabajocampo <-trabajocampo %>%
mutate( sobob = ifelse(estnutri == "Delgadez extrema", 1, 0))
trabajocampo$estnutri <- as.factor(trabajocampo$estnutri)
trabajocampo$estnutri <- factor( x = trabajocampo$estnutri, levels = estnutrilab)
#Variance and confidence interval calculator function for proportions
weightedperc <- function(dataframe){
weightedpercdata <- dataframe
percent <- wpct(weightedpercdata$sobob, weightedpercdata$sweightcorrected)
listpercent <- as.list(percent)
names(listpercent) <- c("pn", "pnn")
return(listpercent$pnn)
}
wtdpercclust <- function(dataframe){
c1 <- subset(dataframe, cluster == 1, select=c(sobob,sweightcorrected))
c2 <- subset(dataframe, cluster == 2, select=c(sobob,sweightcorrected))
c3 <- subset(dataframe, cluster == 3, select=c(sobob,sweightcorrected))
c4 <- subset(dataframe, cluster == 4, select=c(sobob,sweightcorrected))
c5 <- subset(dataframe, cluster == 5, select=c(sobob,sweightcorrected))
c6 <- subset(dataframe, cluster == 6, select=c(sobob,sweightcorrected))
c7 <- subset(dataframe, cluster == 7, select=c(sobob,sweightcorrected))
c8 <- subset(dataframe, cluster == 8, select=c(sobob,sweightcorrected))
clusterlist <- list(c1,c2,c3,c4,c5,c6,c7,c8)
weightedpercclus<-sapply(clusterlist,weightedperc)
return(weightedpercclus)
}
intconfprop <- function(dataframe){
p<-wtdpercclust(dataframe)
q<-(1-p)
nh <-dataframe %>%
group_by(cluster)%>%
summarise(sumcluster= n_distinct(upm))
n <- sum(nh$sumcluster)
nhn<-merge(nh,n, all.x = TRUE)
nhv <-as.vector(nhn$sumcluster)
nv <- as.vector(nhn$y)
w <-(nhv/nv)^2
var <- sum(w*((p*q)/(nhv)))
SEp <-sqrt(var)
MEp <- 1.96*SEp
pst <- mean(p)
MaxIntervalp <-pst + MEp
MinIntervalp <- pst - MEp
tib <- tibble(pst,var,SEp, MinIntervalp, MaxIntervalp)
return(tib)
}
intconfprop(trabajocampo)
intconfprop(FemProp)
intconfprop(MascProp)
weightedperc <- function(dataframe){
weightedpercdata <- dataframe
percent <- wpct(weightedpercdata$sobob, weightedpercdata$sweightcorrected)
listpercent <- as.list(percent)
names(listpercent) <- c("pn", "pnn")
return(listpercent$pnn)
}
wtdpercclusturban <- function(dataframe){
c5 <- subset(dataframe, cluster == 5, select=c(sobob,sweightcorrected))
c6 <- subset(dataframe, cluster == 6, select=c(sobob,sweightcorrected))
c7 <- subset(dataframe, cluster == 7, select=c(sobob,sweightcorrected))
c8 <- subset(dataframe, cluster == 8, select=c(sobob,sweightcorrected))
clusterlist <- list(c5,c6,c7,c8)
weightedpercclus<-sapply(clusterlist,weightedperc)
return(weightedpercclus)
}
intconfpropurban <- function(dataframe){
p<-wtdpercclusturban(dataframe)
q<-(1-p)
nh <-dataframe %>%
group_by(cluster)%>%
summarise(sumcluster= n_distinct(upm))
n <- sum(nh$sumcluster)
nhn<-merge(nh,n, all.x = TRUE)
nhv <-as.vector(nhn$sumcluster)
nv <- as.vector(nhn$y)
w <-(nhv/nv)^2
var <- sum(w*((p*q)/nhv))
SEp <-sqrt(var)
MEp <- 1.96*SEp
pst <- mean(p)
MaxIntervalp <-pst + MEp
MinIntervalp <- pst - MEp
tib <- tibble(pst,var,SEp, MinIntervalp, MaxIntervalp)
return(tib)
}
intconfpropurban(UrbanProp)
#Variance and confidence interval calculator function for proportions
weightedperc <- function(dataframe){
weightedpercdata <- dataframe
percent <- wpct(weightedpercdata$sobob, weightedpercdata$sweightcorrected)
listpercent <- as.list(percent)
names(listpercent) <- c("pn", "pnn")
return(listpercent$pnn)
}
wtdpercclust <- function(dataframe){
c1 <- subset(dataframe, cluster == 1, select=c(sobob,sweightcorrected))
c2 <- subset(dataframe, cluster == 2, select=c(sobob,sweightcorrected))
c3 <- subset(dataframe, cluster == 3, select=c(sobob,sweightcorrected))
c4 <- subset(dataframe, cluster == 4, select=c(sobob,sweightcorrected))
c5 <- subset(dataframe, cluster == 5, select=c(sobob,sweightcorrected))
c6 <- subset(dataframe, cluster == 6, select=c(sobob,sweightcorrected))
c7 <- subset(dataframe, cluster == 7, select=c(sobob,sweightcorrected))
c8 <- subset(dataframe, cluster == 8, select=c(sobob,sweightcorrected))
clusterlist <- list(c1,c2,c3,c4,c5,c6,c7,c8)
weightedpercclus<-sapply(clusterlist,weightedperc)
return(weightedpercclus)
}
intconfprop <- function(dataframe){
p<-wtdpercclust(dataframe)
q<-(1-p)
nh <-dataframe %>%
group_by(cluster)%>%
summarise(sumcluster= n_distinct(upm))
n <- sum(nh$sumcluster)
nhn<-merge(nh,n, all.x = TRUE)
nhv <-as.vector(nhn$sumcluster)
nv <- as.vector(nhn$y)
w <-(nhv/nv)^2
var <- sum(w*((p*q)/(nhv)))
SEp <-sqrt(var)
MEp <- 1.96*SEp
pst <- mean(p)
MaxIntervalp <-pst + MEp
MinIntervalp <- pst - MEp
tib <- tibble(pst,var,SEp, MinIntervalp, MaxIntervalp)
return(tib)
}
intconfprop(trabajocampo)
trabajocampo <-trabajocampo %>%
mutate( sobob = ifelse(estnutri == "Obesidad", 1, 0))
trabajocampo$estnutri <- as.factor(trabajocampo$estnutri)
trabajocampo$estnutri <- factor( x = trabajocampo$estnutri, levels = estnutrilab)
#Variance and confidence interval calculator function for proportions
weightedperc <- function(dataframe){
weightedpercdata <- dataframe
percent <- wpct(weightedpercdata$sobob, weightedpercdata$sweightcorrected)
listpercent <- as.list(percent)
names(listpercent) <- c("pn", "pnn")
return(listpercent$pnn)
}
wtdpercclust <- function(dataframe){
c1 <- subset(dataframe, cluster == 1, select=c(sobob,sweightcorrected))
c2 <- subset(dataframe, cluster == 2, select=c(sobob,sweightcorrected))
c3 <- subset(dataframe, cluster == 3, select=c(sobob,sweightcorrected))
c4 <- subset(dataframe, cluster == 4, select=c(sobob,sweightcorrected))
c5 <- subset(dataframe, cluster == 5, select=c(sobob,sweightcorrected))
c6 <- subset(dataframe, cluster == 6, select=c(sobob,sweightcorrected))
c7 <- subset(dataframe, cluster == 7, select=c(sobob,sweightcorrected))
c8 <- subset(dataframe, cluster == 8, select=c(sobob,sweightcorrected))
clusterlist <- list(c1,c2,c3,c4,c5,c6,c7,c8)
weightedpercclus<-sapply(clusterlist,weightedperc)
return(weightedpercclus)
}
intconfprop <- function(dataframe){
p<-wtdpercclust(dataframe)
q<-(1-p)
nh <-dataframe %>%
group_by(cluster)%>%
summarise(sumcluster= n_distinct(upm))
n <- sum(nh$sumcluster)
nhn<-merge(nh,n, all.x = TRUE)
nhv <-as.vector(nhn$sumcluster)
nv <- as.vector(nhn$y)
w <-(nhv/nv)^2
var <- sum(w*((p*q)/(nhv)))
SEp <-sqrt(var)
MEp <- 1.96*SEp
pst <- mean(p)
MaxIntervalp <-pst + MEp
MinIntervalp <- pst - MEp
tib <- tibble(pst,var,SEp, MinIntervalp, MaxIntervalp)
return(tib)
}
intconfprop(trabajocampo)
trabajocampo <-trabajocampo %>%
mutate( sobob = ifelse(estnutri == "Obesidad" | estnutri == "Sobrepeso", 1, 0))
trabajocampo$estnutri <- as.factor(trabajocampo$estnutri)
trabajocampo$estnutri <- factor( x = trabajocampo$estnutri, levels = estnutrilab)
PN<-trabajocampo %>%
filter(sobob == "0")
PNN <- trabajocampo %>%
filter(sobob == "1")
htintmean(PN$paqa, PN$inclprobcorr, PN$cluster)
wtd.cor(trabajocampo$puntajez, trabajocampo$paqa, weight = trabajocampo$sweightcorrected)
ggplot(trabajocampo, aes(x = puntajez, y = paqa, weight = sweightcorrected)) + geom_point() + scale_x_continuous(name = "Puntaje Z") + scale_y_continuous(name = "Puntaje PAQ-A")+theme_minimal()
wtd.t.test(PN$paqa, PNN$paqa, weight = PN$sweightcorrected, weighty = PNN$sweightcorrected)
PN<-trabajocampo %>%
filter(sobob == "0")
PNN <- trabajocampo %>%
filter(sobob == "1")
wtd.cor(trabajocampo$puntajez, trabajocampo$paqa, weight = trabajocampo$sweightcorrected)
ggplot(trabajocampo, aes(x = puntajez, y = paqa, weight = sweightcorrected)) + geom_point() + scale_x_continuous(name = "Puntaje Z") + scale_y_continuous(name = "Puntaje PAQ-A")+theme_minimal()
wtd.t.test(PN$paqa, PNN$paqa, weight = PN$sweightcorrected, weighty = PNN$sweightcorrected)
wtd.cor(trabajocampo$afhc, trabajocampo$puntajez, weight = trabajocampo$afhc)
ggplot(trabajocampo, aes(x = puntajez, y = afhc, weight = sweightcorrected)) + geom_point()+scale_x_continuous(name = "Puntaje Z")+ scale_y_continuous(name = "Puntaje AFHC")+theme_minimal()
wtd.t.test(PN$afhc, PNN$afhc, weight = PN$sweightcorrected, weighty = PNN$sweightcorrected)
